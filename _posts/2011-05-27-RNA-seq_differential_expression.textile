---
layout: post
title: "RNA-seq: Finding Differentially Expressed Genes"
categories:
- bioinformatics
---

Here are some notes on processing RNA-seq data to find differentially expressed genes.

h2. Tools Used

* "TopHat":http://tophat.cbcb.umd.edu/manual.html v1.1.2
* "Cufflinks":http://cufflinks.cbcb.umd.edu/tutorial.html v1.0.1
* "Samtools":http://samtools.sourceforge.net v0.1.16

h2. Requirements

h3. Sequence Files

We are starting from Illumina generated "Fastq sequence":http://en.wikipedia.org/wiki/FASTQ_format files. The reads contained in these files are paired-end and 40bp long. We are using mouse data. The naming convention follows the format: s_LANE_PAIRED_sequence.txt. So s_1_1_sequence.txt is the "left" side of the paired-end data on lane 1 and s_1_2_sequence.txt is the "right" side.

h3. Pre-built Index

There are a number of pre-built indexes that "TopHat makers provide":ftp://ftp.cbcb.umd.edu/pub/data/bowtie_indexes/ . For the mouse genome, they have "m_musculus_ncbi37", "mm8", and "mm9" currently listed in their ftp directory. 

We also have our own indexes, in our genomes directory. The index used in the initial run was labelled *Mus_musculus.NCBIM37.52*. 

h3. Gene Model Annotations

We also want to supply TopHat with a list of gene model annotations. This is in "GTF v2.2":http://mblab.wustl.edu/GTF22.html format, and the chromosome names must match those in the index. For the initial run *Mus_musculus.NCBIM37.52.gtf was used.

h2. Pipeline Run

The pipeline looks to be pretty simple:

p(hud). Sequences -> TopHat -> Manual Check -> Cufflinks -> Analysis

h3. TopHat

h4. TopHat Configuration

There are some settings to get right for TopHat. Here are the flags and the initial values I used.

h5. Average Mate-Pair Inner Distance

h5. @-r/--mate-inner-dist@  

This is a required setting for paired-end data with *no default value*. For this kind of setting, I would expect them to have a table or something that provides some suggestions on how to get this right.

Also, when speaking to associates, it sounds like their formula incorrect - or at least misleading. Here, I'll try to explain it a bit more clearly as how we see it.

We are trying to provide TopHat the average distance between the ends of the paired-end reads. So, we have our library which is composed of fragmented cDNA (the DNA insert), ligated to adapter sequences on both sides. This library is size selected *after* the adapters are ligated to the DNA insert. So, a 300bp library would have 300bp - Adapter_Length size inserts. 

The trick is that during sequencing, sequencing starts at the DNA insert - *not* at the beginning of the adaptor. So, in order to figure out the distance between pair-end sequences, we need to subtract the Adapter_Length from the library size. There are adapter sequences on both sides of the DNA insert, so we need to subtract from both sides as we are reading from both sides. The total length of the Left_Adapter + Right_Adapter should suffice - this is what I'm calling Adapter_Length.

h5. Mate-pair Distance Diagram

p=. !images/rna_seq/paired_end_distance.png!

In total, to determine a good value for @-r@ we need:
* The *size-selection* target for the final library (usually around 300bp)
* The *read length* (here 40bp)
* The *adapter length* (for TruSeq adapters this looks to be 120bp or 121bp. For other paired-end adaptors, it is 98bp.).

The formula then becomes:

{% highlight ruby %}
Inner_Distance = Library_Size - (2 * Read_Length) - Adapter_Length
{% endhighlight %}

Or, for our specific run:

{% highlight ruby %}
315 - (2 * 40) - 121 = 114
{% endhighlight %}

315 was the reported average size of the library for this particular sample.

I didn't fully understand all this on my initial run of the TopHat. So, my @-r@ was set to 122 - which is close. I re-ran TopHat using the same parameters, but with an @-r@ of 114, to see if there are any noticeable differences in the mapping quality.

h5. Gene Model Annotations

h5. @-G/--GTF@

Full path to the .gtf file for mouse that matches the index file you will be using (see above). In my case, *Mus_musculus.NCBIM37.52.gtf*. This is on a separate file system, but that does not seem to be a big deal.

h5. Threads

h5. @-p/--num-threads@

You would think that these software packages would settle on a single unified flag to indicate the number of processes to use - but you would be wrong. I've tried running with 4 and 8. Details on run times for these choices below.

h5. Output

h5. @-o/--output-dir@

As all the files generated by TopHat have the same name from run to run, it is best to use this option to put them into their own directory. 

h4. TopHat Run

The total TopHat execution string looks something like:

<pre class="terminal"><code>tophat -r 122 -G /full/gtf/path/Mus_musculus.NCBIM37.52.gtf \
-p 4 -o unique_output_dir/tophat/ \
/full/index/path/Mus_musculus.NCBIM37.52 s_1_1_sequence.txt s_1_2_sequence.txt</code></pre>

I would also ensure that your output directory exists prior to running. I do not know if TopHat creates this directory or exits out if it is not present.

With @-p 4@ this took around *13 hours* to complete. With @-p 8@ it took

h4. TopHat Run Analysis

I wanted to have some level of confidence that the output produced by this run was good. The log files produced by TopHat are undocumented and less than helpful. 

Online, I found "some":http://seqanswers.com/forums/showthread.php?t=9098 "posts":http://i.seqanswers.com/questions/80/interpreting-samtools-flagstat-output "using":http://seqanswers.com/forums/showthread.php?t=8389 *samtools flagstat* to look at sam/bam files. 

I don't understand why a tool that everyone seems to know about is "not mentioned at all in the samtools manual page":http://www.google.com/search?sourceid=chrome&ie=UTF-8&q=inurl%3Asamtools.sourceforge.net+flagstat !!

Running @samtools@ on the command line with no arguments provides a short help section. Here @flagstat@ is listed with the description "simple stats". Very helpful. 

Here is the output for the first TopHat run that used 122bp for the @-r@ parameter:

{% highlight bash %}
$ samtools flagstat accepted_hits.bam

102925213 + 0 in total (QC-passed reads + QC-failed reads)
0 + 0 duplicates
102925213 + 0 mapped (100.00%:nan%)
102925213 + 0 paired in sequencing
51854282 + 0 read1
51070931 + 0 read2
65032742 + 0 properly paired (63.18%:nan%)
96061406 + 0 with itself and mate mapped
6863807 + 0 singletons (6.67%:nan%)
0 + 0 with mate mapped to a different chr
0 + 0 with mate mapped to a different chr (mapQ>=5)
{% endhighlight %}

h3. Cufflinks

h4. Cufflinks Configuration

h4. Cufflinks Run

h4. Cufflinks Analysis

h3. Analysis
